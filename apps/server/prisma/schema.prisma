generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionDirection {
  debit
  credit
}

enum TransactionStatus {
  posted
  pending
  failed
  canceled
}

enum TransactionCategory {
  transfer
  topup
  taxi
  food
  education
  transport
  shopping
  entertainment
  other
}

enum TransactionSource {
  internal
  admin
  stub
}

enum ProductCategory {
  saving
  credit
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  firstName    String
  lastName     String
  middleName   String?
  ratingLevel  Int      @default(3)
  isAdmin      Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  wallet       Wallet?
  transactions Transaction[]
  userProducts UserProducts[]
}

model Wallet {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String  @unique
  balance   Int     @default(0)
}

model Product {
  id             String  @id @default(cuid())
  code           String  @unique
  title          String
  subtitle       String
  icon           String
  iconColor      String
  iconBg         String
  category       ProductCategory
  allowedRatings Int[]
  isActive       Boolean @default(true)
  userProducts   UserProducts[]
}

model Transaction {
  id              String   @id @default(cuid())
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  direction       TransactionDirection
  amountMinor     Int
  currency        String   @default("RUB")
  category        TransactionCategory
  counterpartyName String?
  source          TransactionSource @default(admin)
  status          TransactionStatus @default(posted)
  createdAt       DateTime @default(now())
  postedAt        DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([userId, createdAt])
}

model UserProducts {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  status    String   @default("active")
  openedAt  DateTime @default(now())
  initialDeposit Int @default(0)

  @@unique([userId, productId])
  @@index([userId, status])
}

